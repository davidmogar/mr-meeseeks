---

- hosts: all
  tasks:
    - name: Include theme variables
      include_vars:
        file: "themes/{{ theme_name }}/variables.yaml"
        name: theme
  tags: always

#
# Ensure user_id is defined
#
- hosts: all
  tasks:
    - name: Assert that user_id is defined when running as root
      assert:
        msg: 'user_id must be defined when running as root (missing --extra-vars "user_id=USER"?)'
        that:
          - user_id is defined
      when: ansible_facts['user_id'] == "root"

    - name: Register user_id
      set_fact:
        user_id: "{{ ansible_user_id }}"
      when: ansible_facts['user_id'] != "root"
  tags: always

#
# Create main user and aur_builder
#
- hosts: all
  tasks:
    - import_role:
        name: user
      when: ansible_facts['user_id'] == "root"

    - name: Get user home directory
      changed_when: false
      register: getent
      shell: "getent passwd {{ user_id }}  | awk -F: '{ print $6 }'"

    - name: Register user_id
      set_fact:
        user_home: "{{ getent.stdout }}"
  tags: always

#
# Set up sudo
#
- hosts: all
  roles: [ sudo ]
  tags: always

#
# Install roles
#
- hosts: all
  roles: [ alacritty ]
  tags:
    - alacritty
    - desktop

- hosts: all
  roles: [ bluetooth ]
  tags:
    - bluetooth

- hosts: all
  roles: [ bspwm ]
  tags:
    - bspwm
    - desktop

- hosts: all
  roles: [ chrome ]
  tags:
    - chrome
    - desktop

- hosts: all
  roles: [ cli-utilities ]
  tags: cli-utilities

- hosts: all
  roles: [ dunst ]
  tags:
    - desktop
    - dunst

- hosts: all
  roles: [ feh ]
  tags:
    - bspwm
    - desktop
    - feh

- hosts: all
  roles: [ fonts ]
  tags:
    - bspwm
    - desktop
    - fonts

- hosts: all
  roles: [ irssi ]
  tags: irssi

- hosts: all
  roles: [ neovim ]
  tags: neovim

- hosts: all
  roles: [ picom ]
  tags:
    - bspwm
    - desktop
    - picom

- hosts: all
  roles: [ polybar ]
  tags:
    - bspwm
    - desktop
    - polybar

- hosts: all
  roles: [ rofi ]
  tags:
    - desktop
    - rofi

- hosts: all
  roles: [ sdkman ]
  tags:
    - sdkman

- hosts: all
  roles: [ sound ]
  tags:
    - desktop
    - sound

- hosts: all
  roles: [ sxhkd ]
  tags:
    - desktop
    - sxhkd

- hosts: all
  roles: [ vscode ]
  tags: vscode

- hosts: all
  roles: [ xdg-user-dirs ]
  tags:
    - desktop
    - xdg-user-dirs

- hosts: all
  roles: [ xorg ]
  tags:
    - desktop
    - xorg

- hosts: all
  roles: [ wifi ]
  tags:
    - wifi

- hosts: all
  roles: [ zsh ]
  tags:
    - zsh